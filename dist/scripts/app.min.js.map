{"version":3,"sources":["webpack:///app.min.js","webpack:///./src/ts/app/app.ts","webpack:///./src/ts/app/modules/main/main.module.ts","webpack:///./src/ts/app/modules/main/main/main.component.ts","webpack:///./src/ts/app/modules/main/main/main.component.html","webpack:///./~/angular2-universal/browser/index.js","webpack:///./~/angular2-universal/browser/browser.js","webpack:///./~/angular2-universal/browser/env.js","webpack:///./~/angular2-universal/browser/universal-module.js","webpack:///./~/preboot/__build/src/browser/preboot_browser.js","webpack:///./~/angular2-universal/common/index.js"],"names":["webpackJsonp","module","exports","__webpack_require__","platform_browser_dynamic_1","main_module_1","platformBrowserDynamic","bootstrapModule","MainModule","__decorate","this","decorators","target","key","desc","d","c","arguments","length","r","Object","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","__metadata","k","v","metadata","core_1","platform_browser_1","main_component_1","angular2_universal_1","NgModule","imports","BrowserModule","UniversalModule","declarations","MainComponent","bootstrap","name","Component","selector","template","__export","m","p","hasOwnProperty","browserUniversal","value","default","isBrowser","isNode","_randomChar","String","fromCharCode","Math","floor","random","_appIdRandomProviderFactory","universalCacheFactory","_win","window","CACHE","assign","UNIVERSAL_CACHE","appIdFactory","appId","APP_ID","appBootstrapListenerFactory","autoPreboot","prebootComplete","prebootClient","setTimeout","complete","platformUniversalDynamic","extraProviders","platform","createPlatformFactory","http_1","e","SharedStylesHost","__platform_browser_private__","OpaqueToken","AUTO_PREBOOT","sharedStylesHost","domStyles","document","head","querySelectorAll","styles","Array","prototype","slice","call","filter","style","innerText","textContent","indexOf","map","forEach","_stylesSet","add","_styles","push","withConfig","_config","providers","provide","useValue","ngModule","type","args","HttpModule","JsonpModule","useFactory","deps","multi","APP_BOOTSTRAP_LISTENER","ctorParameters","undefined","Inject","opts","theWindow","prebootData","apps","appData","completeApp","noCleanup","cleanup","root","events","appRoot","serverSelector","clientNode","querySelector","clientSelector","event","replayEvent","switchBuffer","prebootEvent","serverNode","node","nodeKey","findClientNode","checked","selected","dispatchEvent","console","warn","log","serverView","clientView","nodeName","display","getComputedStyle","getPropertyValue","remove","ex","error","listeners","setFocus","activeNode","_i","listeners_1","listener","removeEventListener","eventName","handler","removeOverlay","clientNodeCache","prebootOverlay","body","focus","selection","setSelectionRange","start","end","direction","serverNodeContext","serverNodeKey","getNodeKey","className","replace","trim","tagName","id","rootClientNode","clientNodes","clientNodes_1","clientNodeKey","nodeContext","ancestors","temp","parentNode","len","childNodes","j","zoneProps","WeakMap","ZoneStore","props","create","store","Map","keys","prop","set","zone","Zone","current","fork","properties","clear","get","setMap","obj","obj_1","has"],"mappings":"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","file":"app.min.js","sourcesContent":["webpackJsonp([0],[\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = __webpack_require__(1);\n\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\t/**\r\n\t * Created by Gábor on 2016. 11. 20..\r\n\t */\r\n\tvar platform_browser_dynamic_1 = __webpack_require__(2);\r\n\tvar main_module_1 = __webpack_require__(24);\r\n\tplatform_browser_dynamic_1.platformBrowserDynamic().bootstrapModule(main_module_1.MainModule);\r\n\n\n/***/ },\n/* 2 */,\n/* 3 */,\n/* 4 */,\n/* 5 */,\n/* 6 */,\n/* 7 */,\n/* 8 */,\n/* 9 */,\n/* 10 */,\n/* 11 */,\n/* 12 */,\n/* 13 */,\n/* 14 */,\n/* 15 */,\n/* 16 */,\n/* 17 */,\n/* 18 */,\n/* 19 */,\n/* 20 */,\n/* 21 */,\n/* 22 */,\n/* 23 */,\n/* 24 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\r\n\t * Created by Gábor on 2016. 11. 20..\r\n\t */\r\n\t\"use strict\";\r\n\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n\t};\r\n\tvar __metadata = (this && this.__metadata) || function (k, v) {\r\n\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n\t};\r\n\tvar core_1 = __webpack_require__(4);\r\n\tvar platform_browser_1 = __webpack_require__(22);\r\n\tvar main_component_1 = __webpack_require__(25);\r\n\tvar angular2_universal_1 = __webpack_require__(27);\r\n\tvar MainModule = (function () {\r\n\t    function MainModule() {\r\n\t    }\r\n\t    MainModule = __decorate([\r\n\t        core_1.NgModule({\r\n\t            imports: [platform_browser_1.BrowserModule, angular2_universal_1.UniversalModule],\r\n\t            declarations: [main_component_1.MainComponent],\r\n\t            bootstrap: [main_component_1.MainComponent]\r\n\t        }), \r\n\t        __metadata('design:paramtypes', [])\r\n\t    ], MainModule);\r\n\t    return MainModule;\r\n\t}());\r\n\texports.MainModule = MainModule;\r\n\n\n/***/ },\n/* 25 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\r\n\t * Created by Gábor on 2016. 12. 11..\r\n\t */\r\n\t\"use strict\";\r\n\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n\t};\r\n\tvar __metadata = (this && this.__metadata) || function (k, v) {\r\n\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n\t};\r\n\tvar core_1 = __webpack_require__(4);\r\n\tvar MainComponent = (function () {\r\n\t    function MainComponent() {\r\n\t        this.name = 'Angular2';\r\n\t    }\r\n\t    MainComponent = __decorate([\r\n\t        core_1.Component({\r\n\t            selector: 'app',\r\n\t            template: __webpack_require__(26)\r\n\t        }), \r\n\t        __metadata('design:paramtypes', [])\r\n\t    ], MainComponent);\r\n\t    return MainComponent;\r\n\t}());\r\n\texports.MainComponent = MainComponent;\r\n\n\n/***/ },\n/* 26 */\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<h1>Hello, {{name}}!</h1>\";\n\n/***/ },\n/* 27 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tfunction __export(m) {\n\t    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n\t}\n\tvar browserUniversal = __webpack_require__(28);\n\t__export(__webpack_require__(28));\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\n\texports.default = browserUniversal;\n\t//# sourceMappingURL=index.js.map\n\n/***/ },\n/* 28 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tfunction __export(m) {\n\t    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n\t}\n\t__export(__webpack_require__(29));\n\t__export(__webpack_require__(30));\n\t__export(__webpack_require__(33));\n\t//# sourceMappingURL=browser.js.map\n\n/***/ },\n/* 29 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\texports.isBrowser = true;\n\texports.isNode = false;\n\t//# sourceMappingURL=env.js.map\n\n/***/ },\n/* 30 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar core_1 = __webpack_require__(4);\n\tvar http_1 = __webpack_require__(31);\n\tvar platform_browser_dynamic_1 = __webpack_require__(2);\n\tvar platform_browser_1 = __webpack_require__(22);\n\tvar prebootClient;\n\ttry {\n\t    prebootClient = __webpack_require__(32);\n\t    prebootClient = (prebootClient && prebootClient.prebootClient) || prebootClient;\n\t}\n\tcatch (e) { }\n\tfunction _randomChar() {\n\t    return String.fromCharCode(97 + Math.floor(Math.random() * 25));\n\t}\n\tfunction _appIdRandomProviderFactory() {\n\t    return \"\" + _randomChar() + _randomChar() + _randomChar();\n\t}\n\tvar SharedStylesHost = platform_browser_1.__platform_browser_private__.SharedStylesHost;\n\texports.UNIVERSAL_CACHE = new core_1.OpaqueToken('UNIVERSAL_CACHE');\n\texports.AUTO_PREBOOT = new core_1.OpaqueToken('AUTO_PREBOOT');\n\tfunction universalCacheFactory() {\n\t    var _win = window;\n\t    var CACHE = Object.assign({}, _win.UNIVERSAL_CACHE || {});\n\t    delete _win.UNIVERSAL_CACHE;\n\t    return CACHE;\n\t}\n\texports.universalCacheFactory = universalCacheFactory;\n\tfunction appIdFactory() {\n\t    var _win = window;\n\t    var CACHE = _win.UNIVERSAL_CACHE || {};\n\t    var appId = null;\n\t    if (CACHE.APP_ID) {\n\t        appId = CACHE.APP_ID;\n\t    }\n\t    else {\n\t        appId = _appIdRandomProviderFactory();\n\t    }\n\t    return appId;\n\t}\n\texports.appIdFactory = appIdFactory;\n\tfunction appBootstrapListenerFactory(autoPreboot) {\n\t    return autoPreboot ? prebootComplete : function () { };\n\t}\n\texports.appBootstrapListenerFactory = appBootstrapListenerFactory;\n\tfunction prebootComplete(value) {\n\t    var _win = window;\n\t    if (_win && prebootClient) {\n\t        setTimeout(function () { return prebootClient().complete(); });\n\t    }\n\t    return value;\n\t}\n\texports.prebootComplete = prebootComplete;\n\tvar UniversalModule = (function () {\n\t    function UniversalModule(sharedStylesHost) {\n\t        var domStyles = document.head.querySelectorAll('style');\n\t        var styles = Array.prototype.slice.call(domStyles)\n\t            .filter(function (style) { return (style.innerText || style.textContent).indexOf('_ng') !== -1; })\n\t            .map(function (style) { return (style.innerText || style.textContent); });\n\t        styles.forEach(function (style) {\n\t            sharedStylesHost._stylesSet.add(style);\n\t            sharedStylesHost._styles.push(style);\n\t        });\n\t    }\n\t    UniversalModule.withConfig = function (_config) {\n\t        if (_config === void 0) { _config = {}; }\n\t        var providers = [];\n\t        if (typeof _config.autoPreboot === 'boolean') {\n\t            providers.push({\n\t                provide: exports.AUTO_PREBOOT,\n\t                useValue: _config.autoPreboot,\n\t            });\n\t        }\n\t        return {\n\t            ngModule: UniversalModule,\n\t            providers: providers,\n\t        };\n\t    };\n\t    UniversalModule.decorators = [\n\t        { type: core_1.NgModule, args: [{\n\t                    imports: [],\n\t                    exports: [\n\t                        platform_browser_1.BrowserModule,\n\t                        http_1.HttpModule,\n\t                        http_1.JsonpModule\n\t                    ],\n\t                    providers: [\n\t                        {\n\t                            provide: exports.UNIVERSAL_CACHE,\n\t                            useFactory: universalCacheFactory,\n\t                        },\n\t                        {\n\t                            provide: core_1.APP_ID,\n\t                            useFactory: appIdFactory,\n\t                            deps: []\n\t                        },\n\t                        {\n\t                            provide: exports.AUTO_PREBOOT,\n\t                            useValue: true\n\t                        },\n\t                        {\n\t                            multi: true,\n\t                            provide: core_1.APP_BOOTSTRAP_LISTENER,\n\t                            useFactory: appBootstrapListenerFactory,\n\t                            deps: [exports.AUTO_PREBOOT],\n\t                        },\n\t                    ]\n\t                },] },\n\t    ];\n\t    UniversalModule.ctorParameters = [\n\t        { type: undefined, decorators: [{ type: core_1.Inject, args: [SharedStylesHost,] },] },\n\t    ];\n\t    return UniversalModule;\n\t}());\n\texports.UniversalModule = UniversalModule;\n\tfunction platformUniversalDynamic(extraProviders) {\n\t    var platform = core_1.createPlatformFactory(platform_browser_dynamic_1.platformBrowserDynamic, 'universalBrowserDynamic', [])(extraProviders);\n\t    return platform;\n\t}\n\texports.platformUniversalDynamic = platformUniversalDynamic;\n\t;\n\t//# sourceMappingURL=universal-module.js.map\n\n/***/ },\n/* 31 */,\n/* 32 */\n/***/ function(module, exports) {\n\n\t/**\n\t * This is the entry point for the client side preboot library. At a high level, this library\n\t * is used to facilitate the switch from the server view to the client view. Specifically that\n\t * means:\n\t *\n\t *    1. Replay stored server view events on client view\n\t *    2. Switch buffer from server view to client view\n\t *    3. Reset focus on client view\n\t */\n\t\"use strict\";\n\t// the idea here is that preboot is a global value on the window that is used by the client\n\tvar preboot = prebootClient();\n\t// wrapper function used to contain all the preboot client functionality\n\tfunction prebootClient() {\n\t    // used to cache map from server node key to associated client node\n\t    var clientNodeCache = {};\n\t    /**\n\t     * External code call this to kick off the switch from server to client\n\t     */\n\t    function complete(opts) {\n\t        opts = opts || {};\n\t        var theWindow = (opts.window || window);\n\t        var prebootData = theWindow.prebootData || {};\n\t        var apps = prebootData.apps || [];\n\t        // loop through each of the preboot apps\n\t        apps.forEach(function (appData) { return completeApp(opts, appData); });\n\t        // once all events have been replayed and buffers switched, then we cleanup preboot\n\t        if (!opts.noCleanup) {\n\t            cleanup(theWindow, prebootData);\n\t        }\n\t    }\n\t    /**\n\t     * Complete a particular app\n\t     * @param opts\n\t     * @param appData\n\t     */\n\t    function completeApp(opts, appData) {\n\t        opts = opts || {};\n\t        appData = (appData || {});\n\t        var theWindow = (opts.window || window);\n\t        var root = (appData.root || {});\n\t        var events = appData.events || [];\n\t        // if a specific app root set and it doesn't equal the server selector, then don't do anything\n\t        if (opts.appRoot && opts.appRoot !== root.serverSelector) {\n\t            return;\n\t        }\n\t        // some client side frameworks (like Angular 1 w UI Router) will replace\n\t        // elements, so we need to re-get client root just to be safe\n\t        root.clientNode = theWindow.document.querySelector(root.clientSelector);\n\t        // replay all the events from the server view onto the client view\n\t        events.forEach(function (event) { return replayEvent(appData, event); });\n\t        // if we are buffering, switch the buffers\n\t        switchBuffer(theWindow, appData);\n\t    }\n\t    /**\n\t     * Replay a particular event. The trick here is finding the appropriate client\n\t     * node where the event is to be dispatched that matches up with the server node\n\t     * where the event came from originally.\n\t     */\n\t    function replayEvent(appData, prebootEvent) {\n\t        appData = (appData || {});\n\t        prebootEvent = (prebootEvent || {});\n\t        var event = prebootEvent.event;\n\t        var serverNode = prebootEvent.node || {};\n\t        var nodeKey = prebootEvent.nodeKey;\n\t        var clientNode = findClientNode({\n\t            root: appData.root,\n\t            node: serverNode,\n\t            nodeKey: nodeKey\n\t        });\n\t        // if client node can't be found, log a warning\n\t        if (!clientNode) {\n\t            console.warn('Trying to dispatch event ' + event.type +\n\t                ' to node ' + nodeKey + ' but could not find client node. ' +\n\t                'Server node is: ');\n\t            console.log(serverNode);\n\t            return;\n\t        }\n\t        // now dispatch events and whatnot to the client node\n\t        clientNode.checked = serverNode.checked ? true : undefined;\n\t        clientNode.selected = serverNode.selected ? true : undefined;\n\t        clientNode.value = serverNode.value;\n\t        clientNode.dispatchEvent(event);\n\t    }\n\t    /**\n\t     * Hide the server buffer and show the client buffer\n\t     */\n\t    function switchBuffer(window, appData) {\n\t        appData = (appData || {});\n\t        var root = (appData.root || {});\n\t        var serverView = root.serverNode;\n\t        var clientView = root.clientNode;\n\t        // if no client view or the server view is the body or client\n\t        // and server view are the same, then don't do anything and return\n\t        if (!clientView || !serverView || serverView === clientView || serverView.nodeName === 'BODY') {\n\t            return;\n\t        }\n\t        // do a try-catch for case where serverView is an object but NOT of type Element\n\t        try {\n\t            // get the server view display mode\n\t            var display = window\n\t                .getComputedStyle(serverView)\n\t                .getPropertyValue('display') || 'block';\n\t            // first remove the server view\n\t            serverView.remove ?\n\t                serverView.remove() :\n\t                serverView.style.display = 'none';\n\t            // now add the client view\n\t            clientView.style.display = display;\n\t        }\n\t        catch (ex) {\n\t            console.error(ex);\n\t        }\n\t    }\n\t    /**\n\t     * This function does three things to cleanup preboot:\n\t     *    1. Set focus (and selection if a text box/text area) within a form element\n\t     *    2. Remove existing event listeners\n\t     *    3. Delete data from memory\n\t     */\n\t    function cleanup(window, prebootData) {\n\t        prebootData = prebootData || {};\n\t        var listeners = prebootData.listeners || [];\n\t        // set focus on the active node AFTER a small delay to ensure buffer switched\n\t        setTimeout(function () {\n\t            setFocus(prebootData.activeNode);\n\t        }, 1);\n\t        // remove all event listeners\n\t        for (var _i = 0, listeners_1 = listeners; _i < listeners_1.length; _i++) {\n\t            var listener = listeners_1[_i];\n\t            listener.node.removeEventListener(listener.eventName, listener.handler);\n\t        }\n\t        // remove the freeze overlay if it exists\n\t        removeOverlay(window);\n\t        // finally clear out the data stored for each app\n\t        prebootData.apps = [];\n\t        clientNodeCache = {};\n\t    }\n\t    /**\n\t     * Remove the overlay if it exists\n\t     */\n\t    function removeOverlay(window) {\n\t        var prebootOverlay = window.document.body.querySelector('#prebootOverlay');\n\t        if (prebootOverlay) {\n\t            prebootOverlay.style.display = 'none';\n\t        }\n\t    }\n\t    /**\n\t     * Set focus on a given active node element\n\t     */\n\t    function setFocus(activeNode) {\n\t        // only do something if there is an active node\n\t        if (!activeNode || !activeNode.node || !activeNode.nodeKey) {\n\t            return;\n\t        }\n\t        // find the client node in the new client view\n\t        var clientNode = findClientNode(activeNode);\n\t        if (clientNode) {\n\t            // set focus on the client node\n\t            clientNode.focus();\n\t            // set selection if a modern browser (i.e. IE9+, etc.)\n\t            var selection = activeNode.selection;\n\t            if (clientNode.setSelectionRange && selection) {\n\t                clientNode.setSelectionRange(selection.start, selection.end, selection.direction);\n\t            }\n\t        }\n\t    }\n\t    /**\n\t     * Given a node from the server rendered view, find the equivalent\n\t     * node in the client rendered view. We do this by the following approach:\n\t     *      1. take the name of the server node tag (ex. div or h1 or input)\n\t     *      2. add either id (ex. div#myid) or class names (ex. div.class1.class2)\n\t     *      3. use that value as a selector to get all the matching client nodes\n\t     *      4. loop through all client nodes found and for each generate a key value\n\t     *      5. compare the client key to the server key; once there is a match, we have our client node\n\t     *\n\t     * NOTE: this only works when the client view is almost exactly the same as the server\n\t     * view. we will need an improvement here in the future to account for situations\n\t     * where the client view is different in structure from the server view\n\t     */\n\t    function findClientNode(serverNodeContext) {\n\t        serverNodeContext = (serverNodeContext || {});\n\t        var serverNode = serverNodeContext.node;\n\t        var root = serverNodeContext.root;\n\t        // if no server or client root, don't do anything\n\t        if (!root || !root.serverNode || !root.clientNode) {\n\t            return null;\n\t        }\n\t        // we use the string of the node to compare to the client node & as key in cache\n\t        var serverNodeKey = serverNodeContext.nodeKey || getNodeKey(serverNodeContext);\n\t        // if client node already in cache, return it\n\t        if (clientNodeCache[serverNodeKey]) {\n\t            return clientNodeCache[serverNodeKey];\n\t        }\n\t        // get the selector for client nodes\n\t        var className = (serverNode.className || '').replace('ng-binding', '').trim();\n\t        var selector = serverNode.tagName;\n\t        if (serverNode.id) {\n\t            selector += '#' + serverNode.id;\n\t        }\n\t        else if (className) {\n\t            selector += '.' + className.replace(/ /g, '.');\n\t        }\n\t        // select all possible client nodes and look through them to try and find a match\n\t        var rootClientNode = root.clientNode;\n\t        var clientNodes = rootClientNode.querySelectorAll(selector) || [];\n\t        // if nothing found, then just try the tag name as a final option\n\t        if (!clientNodes.length) {\n\t            clientNodes = rootClientNode.querySelectorAll(serverNode.tagName) || [];\n\t        }\n\t        for (var _i = 0, clientNodes_1 = clientNodes; _i < clientNodes_1.length; _i++) {\n\t            var clientNode = clientNodes_1[_i];\n\t            // get the key for the client node\n\t            var clientNodeKey = getNodeKey({ root: root, node: clientNode });\n\t            // if the client node key is exact match for the server node key, then we found the client node\n\t            if (clientNodeKey === serverNodeKey) {\n\t                clientNodeCache[serverNodeKey] = clientNode;\n\t                return clientNode;\n\t            }\n\t        }\n\t        // if we get here and there is one clientNode, use it as a fallback\n\t        if (clientNodes.length === 1) {\n\t            clientNodeCache[serverNodeKey] = clientNodes[0];\n\t            return clientNodes[0];\n\t        }\n\t        // if we get here it means we couldn't find the client node so give the user a warning\n\t        console.warn('No matching client node found for ' + serverNodeKey +\n\t            '. You can fix this by assigning this element a unique id attribute.');\n\t        return null;\n\t    }\n\t    /**\n\t     * Attempt to generate key from node position in the DOM\n\t     *\n\t     * NOTE: this function is duplicated in preboot_inline.ts and must be\n\t     * kept in sync. It is duplicated for right now since we are trying\n\t     * to keep all inline code separated and distinct (i.e. without imports)\n\t     */\n\t    function getNodeKey(nodeContext) {\n\t        var ancestors = [];\n\t        var root = nodeContext.root;\n\t        var node = nodeContext.node;\n\t        var temp = node;\n\t        // walk up the tree from the target node up to the root\n\t        while (temp && temp !== root.serverNode && temp !== root.clientNode) {\n\t            ancestors.push(temp);\n\t            temp = temp.parentNode;\n\t        }\n\t        // note: if temp doesn't exist here it means root node wasn't found\n\t        if (temp) {\n\t            ancestors.push(temp);\n\t        }\n\t        // now go backwards starting from the root, appending the appName to unique identify the node later..\n\t        var name = node.nodeName || 'unknown';\n\t        var key = name + '_' + root.serverSelector;\n\t        var len = ancestors.length;\n\t        for (var i = (len - 1); i >= 0; i--) {\n\t            temp = ancestors[i];\n\t            if (temp.childNodes && i > 0) {\n\t                for (var j = 0; j < temp.childNodes.length; j++) {\n\t                    if (temp.childNodes[j] === ancestors[i - 1]) {\n\t                        key += '_s' + (j + 1);\n\t                        break;\n\t                    }\n\t                }\n\t            }\n\t        }\n\t        return key;\n\t    }\n\t    return {\n\t        complete: complete,\n\t        completeApp: completeApp,\n\t        replayEvent: replayEvent,\n\t        switchBuffer: switchBuffer,\n\t        removeOverlay: removeOverlay,\n\t        cleanup: cleanup,\n\t        setFocus: setFocus,\n\t        findClientNode: findClientNode,\n\t        getNodeKey: getNodeKey\n\t    };\n\t}\n\texports.prebootClient = prebootClient;\n\n\n/***/ },\n/* 33 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\texports.zoneProps = new WeakMap();\n\tvar ZoneStore = (function () {\n\t    function ZoneStore(props) {\n\t        if (props === void 0) { props = Object.create(null); }\n\t        var store = new Map();\n\t        try {\n\t            Object.keys(props).forEach(function (prop) {\n\t                store.set(prop, props[prop]);\n\t            });\n\t        }\n\t        catch (e) {\n\t            console.log('e', e);\n\t        }\n\t        exports.zoneProps.set(this, store);\n\t        this.zone = Zone.current.fork({\n\t            name: 'ZoneStore',\n\t            properties: { 'ZoneStore': this }\n\t        });\n\t    }\n\t    ZoneStore.prototype.clear = function () {\n\t        exports.zoneProps.get(this).clear();\n\t    };\n\t    ZoneStore.prototype.setMap = function (obj) {\n\t        var props = exports.zoneProps.get(this);\n\t        for (var _i = 0, obj_1 = obj; _i < obj_1.length; _i++) {\n\t            var prop = obj_1[_i];\n\t            props.set(prop, obj);\n\t        }\n\t    };\n\t    ZoneStore.prototype.get = function (key) {\n\t        var props = exports.zoneProps.get(this);\n\t        if (this.has(key)) {\n\t            return props.get(key);\n\t        }\n\t        return null;\n\t    };\n\t    ZoneStore.prototype.set = function (key, value) {\n\t        var props = exports.zoneProps.get(this);\n\t        if (this.has(key)) {\n\t            props.set(key, value);\n\t            return this;\n\t        }\n\t        return null;\n\t    };\n\t    ZoneStore.prototype.has = function (key) {\n\t        var props = exports.zoneProps.get(this);\n\t        return props.has && props.has(key);\n\t    };\n\t    return ZoneStore;\n\t}());\n\texports.ZoneStore = ZoneStore;\n\t//# sourceMappingURL=index.js.map\n\n/***/ }\n]);\n\n\n// WEBPACK FOOTER //\n// app.min.js","/**\r\n * Created by Gábor on 2016. 11. 20..\r\n */\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\nimport { MainModule } from './modules/main/main.module';\r\n\r\n\r\nplatformBrowserDynamic().bootstrapModule(MainModule);\n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./src/ts/app/app.ts","/**\r\n * Created by Gábor on 2016. 11. 20..\r\n */\r\n\r\nimport { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { MainComponent } from './main/main.component';\r\nimport { UniversalModule } from 'angular2-universal';\r\n\r\n@NgModule({\r\n    imports: [ BrowserModule, UniversalModule ],\r\n    declarations: [ MainComponent ],\r\n    bootstrap: [ MainComponent ]\r\n})\r\nexport class MainModule{}\n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./src/ts/app/modules/main/main.module.ts","/**\r\n * Created by Gábor on 2016. 12. 11..\r\n */\r\n\r\nimport { Component } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'app',\r\n    template: require('./main.component.html')\r\n})\r\nexport class MainComponent{\r\n    name = 'Angular2';\r\n}\n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./src/ts/app/modules/main/main/main.component.ts","module.exports = \"<h1>Hello, {{name}}!</h1>\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/ts/app/modules/main/main/main.component.html\n// module id = 26\n// module chunks = 0","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nvar browserUniversal = require('./browser');\n__export(require('./browser'));\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = browserUniversal;\n//# sourceMappingURL=index.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/angular2-universal/browser/index.js\n// module id = 27\n// module chunks = 0","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\n__export(require('./env'));\n__export(require('./universal-module'));\n__export(require('../common'));\n//# sourceMappingURL=browser.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/angular2-universal/browser/browser.js\n// module id = 28\n// module chunks = 0","\"use strict\";\nexports.isBrowser = true;\nexports.isNode = false;\n//# sourceMappingURL=env.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/angular2-universal/browser/env.js\n// module id = 29\n// module chunks = 0","\"use strict\";\nvar core_1 = require('@angular/core');\nvar http_1 = require('@angular/http');\nvar platform_browser_dynamic_1 = require('@angular/platform-browser-dynamic');\nvar platform_browser_1 = require('@angular/platform-browser');\nvar prebootClient;\ntry {\n    prebootClient = require('preboot/__build/src/browser/preboot_browser');\n    prebootClient = (prebootClient && prebootClient.prebootClient) || prebootClient;\n}\ncatch (e) { }\nfunction _randomChar() {\n    return String.fromCharCode(97 + Math.floor(Math.random() * 25));\n}\nfunction _appIdRandomProviderFactory() {\n    return \"\" + _randomChar() + _randomChar() + _randomChar();\n}\nvar SharedStylesHost = platform_browser_1.__platform_browser_private__.SharedStylesHost;\nexports.UNIVERSAL_CACHE = new core_1.OpaqueToken('UNIVERSAL_CACHE');\nexports.AUTO_PREBOOT = new core_1.OpaqueToken('AUTO_PREBOOT');\nfunction universalCacheFactory() {\n    var _win = window;\n    var CACHE = Object.assign({}, _win.UNIVERSAL_CACHE || {});\n    delete _win.UNIVERSAL_CACHE;\n    return CACHE;\n}\nexports.universalCacheFactory = universalCacheFactory;\nfunction appIdFactory() {\n    var _win = window;\n    var CACHE = _win.UNIVERSAL_CACHE || {};\n    var appId = null;\n    if (CACHE.APP_ID) {\n        appId = CACHE.APP_ID;\n    }\n    else {\n        appId = _appIdRandomProviderFactory();\n    }\n    return appId;\n}\nexports.appIdFactory = appIdFactory;\nfunction appBootstrapListenerFactory(autoPreboot) {\n    return autoPreboot ? prebootComplete : function () { };\n}\nexports.appBootstrapListenerFactory = appBootstrapListenerFactory;\nfunction prebootComplete(value) {\n    var _win = window;\n    if (_win && prebootClient) {\n        setTimeout(function () { return prebootClient().complete(); });\n    }\n    return value;\n}\nexports.prebootComplete = prebootComplete;\nvar UniversalModule = (function () {\n    function UniversalModule(sharedStylesHost) {\n        var domStyles = document.head.querySelectorAll('style');\n        var styles = Array.prototype.slice.call(domStyles)\n            .filter(function (style) { return (style.innerText || style.textContent).indexOf('_ng') !== -1; })\n            .map(function (style) { return (style.innerText || style.textContent); });\n        styles.forEach(function (style) {\n            sharedStylesHost._stylesSet.add(style);\n            sharedStylesHost._styles.push(style);\n        });\n    }\n    UniversalModule.withConfig = function (_config) {\n        if (_config === void 0) { _config = {}; }\n        var providers = [];\n        if (typeof _config.autoPreboot === 'boolean') {\n            providers.push({\n                provide: exports.AUTO_PREBOOT,\n                useValue: _config.autoPreboot,\n            });\n        }\n        return {\n            ngModule: UniversalModule,\n            providers: providers,\n        };\n    };\n    UniversalModule.decorators = [\n        { type: core_1.NgModule, args: [{\n                    imports: [],\n                    exports: [\n                        platform_browser_1.BrowserModule,\n                        http_1.HttpModule,\n                        http_1.JsonpModule\n                    ],\n                    providers: [\n                        {\n                            provide: exports.UNIVERSAL_CACHE,\n                            useFactory: universalCacheFactory,\n                        },\n                        {\n                            provide: core_1.APP_ID,\n                            useFactory: appIdFactory,\n                            deps: []\n                        },\n                        {\n                            provide: exports.AUTO_PREBOOT,\n                            useValue: true\n                        },\n                        {\n                            multi: true,\n                            provide: core_1.APP_BOOTSTRAP_LISTENER,\n                            useFactory: appBootstrapListenerFactory,\n                            deps: [exports.AUTO_PREBOOT],\n                        },\n                    ]\n                },] },\n    ];\n    UniversalModule.ctorParameters = [\n        { type: undefined, decorators: [{ type: core_1.Inject, args: [SharedStylesHost,] },] },\n    ];\n    return UniversalModule;\n}());\nexports.UniversalModule = UniversalModule;\nfunction platformUniversalDynamic(extraProviders) {\n    var platform = core_1.createPlatformFactory(platform_browser_dynamic_1.platformBrowserDynamic, 'universalBrowserDynamic', [])(extraProviders);\n    return platform;\n}\nexports.platformUniversalDynamic = platformUniversalDynamic;\n;\n//# sourceMappingURL=universal-module.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/angular2-universal/browser/universal-module.js\n// module id = 30\n// module chunks = 0","/**\n * This is the entry point for the client side preboot library. At a high level, this library\n * is used to facilitate the switch from the server view to the client view. Specifically that\n * means:\n *\n *    1. Replay stored server view events on client view\n *    2. Switch buffer from server view to client view\n *    3. Reset focus on client view\n */\n\"use strict\";\n// the idea here is that preboot is a global value on the window that is used by the client\nvar preboot = prebootClient();\n// wrapper function used to contain all the preboot client functionality\nfunction prebootClient() {\n    // used to cache map from server node key to associated client node\n    var clientNodeCache = {};\n    /**\n     * External code call this to kick off the switch from server to client\n     */\n    function complete(opts) {\n        opts = opts || {};\n        var theWindow = (opts.window || window);\n        var prebootData = theWindow.prebootData || {};\n        var apps = prebootData.apps || [];\n        // loop through each of the preboot apps\n        apps.forEach(function (appData) { return completeApp(opts, appData); });\n        // once all events have been replayed and buffers switched, then we cleanup preboot\n        if (!opts.noCleanup) {\n            cleanup(theWindow, prebootData);\n        }\n    }\n    /**\n     * Complete a particular app\n     * @param opts\n     * @param appData\n     */\n    function completeApp(opts, appData) {\n        opts = opts || {};\n        appData = (appData || {});\n        var theWindow = (opts.window || window);\n        var root = (appData.root || {});\n        var events = appData.events || [];\n        // if a specific app root set and it doesn't equal the server selector, then don't do anything\n        if (opts.appRoot && opts.appRoot !== root.serverSelector) {\n            return;\n        }\n        // some client side frameworks (like Angular 1 w UI Router) will replace\n        // elements, so we need to re-get client root just to be safe\n        root.clientNode = theWindow.document.querySelector(root.clientSelector);\n        // replay all the events from the server view onto the client view\n        events.forEach(function (event) { return replayEvent(appData, event); });\n        // if we are buffering, switch the buffers\n        switchBuffer(theWindow, appData);\n    }\n    /**\n     * Replay a particular event. The trick here is finding the appropriate client\n     * node where the event is to be dispatched that matches up with the server node\n     * where the event came from originally.\n     */\n    function replayEvent(appData, prebootEvent) {\n        appData = (appData || {});\n        prebootEvent = (prebootEvent || {});\n        var event = prebootEvent.event;\n        var serverNode = prebootEvent.node || {};\n        var nodeKey = prebootEvent.nodeKey;\n        var clientNode = findClientNode({\n            root: appData.root,\n            node: serverNode,\n            nodeKey: nodeKey\n        });\n        // if client node can't be found, log a warning\n        if (!clientNode) {\n            console.warn('Trying to dispatch event ' + event.type +\n                ' to node ' + nodeKey + ' but could not find client node. ' +\n                'Server node is: ');\n            console.log(serverNode);\n            return;\n        }\n        // now dispatch events and whatnot to the client node\n        clientNode.checked = serverNode.checked ? true : undefined;\n        clientNode.selected = serverNode.selected ? true : undefined;\n        clientNode.value = serverNode.value;\n        clientNode.dispatchEvent(event);\n    }\n    /**\n     * Hide the server buffer and show the client buffer\n     */\n    function switchBuffer(window, appData) {\n        appData = (appData || {});\n        var root = (appData.root || {});\n        var serverView = root.serverNode;\n        var clientView = root.clientNode;\n        // if no client view or the server view is the body or client\n        // and server view are the same, then don't do anything and return\n        if (!clientView || !serverView || serverView === clientView || serverView.nodeName === 'BODY') {\n            return;\n        }\n        // do a try-catch for case where serverView is an object but NOT of type Element\n        try {\n            // get the server view display mode\n            var display = window\n                .getComputedStyle(serverView)\n                .getPropertyValue('display') || 'block';\n            // first remove the server view\n            serverView.remove ?\n                serverView.remove() :\n                serverView.style.display = 'none';\n            // now add the client view\n            clientView.style.display = display;\n        }\n        catch (ex) {\n            console.error(ex);\n        }\n    }\n    /**\n     * This function does three things to cleanup preboot:\n     *    1. Set focus (and selection if a text box/text area) within a form element\n     *    2. Remove existing event listeners\n     *    3. Delete data from memory\n     */\n    function cleanup(window, prebootData) {\n        prebootData = prebootData || {};\n        var listeners = prebootData.listeners || [];\n        // set focus on the active node AFTER a small delay to ensure buffer switched\n        setTimeout(function () {\n            setFocus(prebootData.activeNode);\n        }, 1);\n        // remove all event listeners\n        for (var _i = 0, listeners_1 = listeners; _i < listeners_1.length; _i++) {\n            var listener = listeners_1[_i];\n            listener.node.removeEventListener(listener.eventName, listener.handler);\n        }\n        // remove the freeze overlay if it exists\n        removeOverlay(window);\n        // finally clear out the data stored for each app\n        prebootData.apps = [];\n        clientNodeCache = {};\n    }\n    /**\n     * Remove the overlay if it exists\n     */\n    function removeOverlay(window) {\n        var prebootOverlay = window.document.body.querySelector('#prebootOverlay');\n        if (prebootOverlay) {\n            prebootOverlay.style.display = 'none';\n        }\n    }\n    /**\n     * Set focus on a given active node element\n     */\n    function setFocus(activeNode) {\n        // only do something if there is an active node\n        if (!activeNode || !activeNode.node || !activeNode.nodeKey) {\n            return;\n        }\n        // find the client node in the new client view\n        var clientNode = findClientNode(activeNode);\n        if (clientNode) {\n            // set focus on the client node\n            clientNode.focus();\n            // set selection if a modern browser (i.e. IE9+, etc.)\n            var selection = activeNode.selection;\n            if (clientNode.setSelectionRange && selection) {\n                clientNode.setSelectionRange(selection.start, selection.end, selection.direction);\n            }\n        }\n    }\n    /**\n     * Given a node from the server rendered view, find the equivalent\n     * node in the client rendered view. We do this by the following approach:\n     *      1. take the name of the server node tag (ex. div or h1 or input)\n     *      2. add either id (ex. div#myid) or class names (ex. div.class1.class2)\n     *      3. use that value as a selector to get all the matching client nodes\n     *      4. loop through all client nodes found and for each generate a key value\n     *      5. compare the client key to the server key; once there is a match, we have our client node\n     *\n     * NOTE: this only works when the client view is almost exactly the same as the server\n     * view. we will need an improvement here in the future to account for situations\n     * where the client view is different in structure from the server view\n     */\n    function findClientNode(serverNodeContext) {\n        serverNodeContext = (serverNodeContext || {});\n        var serverNode = serverNodeContext.node;\n        var root = serverNodeContext.root;\n        // if no server or client root, don't do anything\n        if (!root || !root.serverNode || !root.clientNode) {\n            return null;\n        }\n        // we use the string of the node to compare to the client node & as key in cache\n        var serverNodeKey = serverNodeContext.nodeKey || getNodeKey(serverNodeContext);\n        // if client node already in cache, return it\n        if (clientNodeCache[serverNodeKey]) {\n            return clientNodeCache[serverNodeKey];\n        }\n        // get the selector for client nodes\n        var className = (serverNode.className || '').replace('ng-binding', '').trim();\n        var selector = serverNode.tagName;\n        if (serverNode.id) {\n            selector += '#' + serverNode.id;\n        }\n        else if (className) {\n            selector += '.' + className.replace(/ /g, '.');\n        }\n        // select all possible client nodes and look through them to try and find a match\n        var rootClientNode = root.clientNode;\n        var clientNodes = rootClientNode.querySelectorAll(selector) || [];\n        // if nothing found, then just try the tag name as a final option\n        if (!clientNodes.length) {\n            clientNodes = rootClientNode.querySelectorAll(serverNode.tagName) || [];\n        }\n        for (var _i = 0, clientNodes_1 = clientNodes; _i < clientNodes_1.length; _i++) {\n            var clientNode = clientNodes_1[_i];\n            // get the key for the client node\n            var clientNodeKey = getNodeKey({ root: root, node: clientNode });\n            // if the client node key is exact match for the server node key, then we found the client node\n            if (clientNodeKey === serverNodeKey) {\n                clientNodeCache[serverNodeKey] = clientNode;\n                return clientNode;\n            }\n        }\n        // if we get here and there is one clientNode, use it as a fallback\n        if (clientNodes.length === 1) {\n            clientNodeCache[serverNodeKey] = clientNodes[0];\n            return clientNodes[0];\n        }\n        // if we get here it means we couldn't find the client node so give the user a warning\n        console.warn('No matching client node found for ' + serverNodeKey +\n            '. You can fix this by assigning this element a unique id attribute.');\n        return null;\n    }\n    /**\n     * Attempt to generate key from node position in the DOM\n     *\n     * NOTE: this function is duplicated in preboot_inline.ts and must be\n     * kept in sync. It is duplicated for right now since we are trying\n     * to keep all inline code separated and distinct (i.e. without imports)\n     */\n    function getNodeKey(nodeContext) {\n        var ancestors = [];\n        var root = nodeContext.root;\n        var node = nodeContext.node;\n        var temp = node;\n        // walk up the tree from the target node up to the root\n        while (temp && temp !== root.serverNode && temp !== root.clientNode) {\n            ancestors.push(temp);\n            temp = temp.parentNode;\n        }\n        // note: if temp doesn't exist here it means root node wasn't found\n        if (temp) {\n            ancestors.push(temp);\n        }\n        // now go backwards starting from the root, appending the appName to unique identify the node later..\n        var name = node.nodeName || 'unknown';\n        var key = name + '_' + root.serverSelector;\n        var len = ancestors.length;\n        for (var i = (len - 1); i >= 0; i--) {\n            temp = ancestors[i];\n            if (temp.childNodes && i > 0) {\n                for (var j = 0; j < temp.childNodes.length; j++) {\n                    if (temp.childNodes[j] === ancestors[i - 1]) {\n                        key += '_s' + (j + 1);\n                        break;\n                    }\n                }\n            }\n        }\n        return key;\n    }\n    return {\n        complete: complete,\n        completeApp: completeApp,\n        replayEvent: replayEvent,\n        switchBuffer: switchBuffer,\n        removeOverlay: removeOverlay,\n        cleanup: cleanup,\n        setFocus: setFocus,\n        findClientNode: findClientNode,\n        getNodeKey: getNodeKey\n    };\n}\nexports.prebootClient = prebootClient;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/preboot/__build/src/browser/preboot_browser.js\n// module id = 32\n// module chunks = 0","\"use strict\";\nexports.zoneProps = new WeakMap();\nvar ZoneStore = (function () {\n    function ZoneStore(props) {\n        if (props === void 0) { props = Object.create(null); }\n        var store = new Map();\n        try {\n            Object.keys(props).forEach(function (prop) {\n                store.set(prop, props[prop]);\n            });\n        }\n        catch (e) {\n            console.log('e', e);\n        }\n        exports.zoneProps.set(this, store);\n        this.zone = Zone.current.fork({\n            name: 'ZoneStore',\n            properties: { 'ZoneStore': this }\n        });\n    }\n    ZoneStore.prototype.clear = function () {\n        exports.zoneProps.get(this).clear();\n    };\n    ZoneStore.prototype.setMap = function (obj) {\n        var props = exports.zoneProps.get(this);\n        for (var _i = 0, obj_1 = obj; _i < obj_1.length; _i++) {\n            var prop = obj_1[_i];\n            props.set(prop, obj);\n        }\n    };\n    ZoneStore.prototype.get = function (key) {\n        var props = exports.zoneProps.get(this);\n        if (this.has(key)) {\n            return props.get(key);\n        }\n        return null;\n    };\n    ZoneStore.prototype.set = function (key, value) {\n        var props = exports.zoneProps.get(this);\n        if (this.has(key)) {\n            props.set(key, value);\n            return this;\n        }\n        return null;\n    };\n    ZoneStore.prototype.has = function (key) {\n        var props = exports.zoneProps.get(this);\n        return props.has && props.has(key);\n    };\n    return ZoneStore;\n}());\nexports.ZoneStore = ZoneStore;\n//# sourceMappingURL=index.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/angular2-universal/common/index.js\n// module id = 33\n// module chunks = 0"],"sourceRoot":""}